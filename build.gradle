plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'

    id 'org.springdoc.openapi-gradle-plugin' version '1.9.0'
    id 'org.openapi.generator' version '7.14.0'
}

group = 'io.github.obicco.wealth'

repositories {
    mavenCentral()
}

bootRun {
    systemProperties = System.properties as Map<String, ?>
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mapstruct:mapstruct:1.6.3'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.11'
    implementation('org.openapitools:openapi-generator-gradle-plugin:7.14.0') {
        exclude module: 'slf4j-simple'
    }

    testImplementation platform('org.junit:junit-bom:5.13.4')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}

// OpenApi
def spec = "$projectDir/doc/openapi/openapi.yaml"
def generatedSourcesDir = "$projectDir/build/generated/openapi"

sourceSets {
    main {
        java {
            srcDir("$generatedSourcesDir/src/main/java")
        }
    }
}

springBoot {
    buildInfo()
}

openApiValidate {
    inputSpec = "$spec".toString()
    recommend = true;
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$spec".toString()
    outputDir = "$generatedSourcesDir".toString()
    apiPackage = "io.github.obicco.wealth.api"
    modelPackage = "io.github.obicco.wealth.model"
    apiNameSuffix = "Api"
    generateApiTests = true
    generateModelTests = true
    generateApiDocumentation = true
    configOptions = [
            interfaceOnly: "true",
            useTags:       "true",
            hideGenerationTimestamp: "true",
            library:       "spring-boot",
            useSpringBoot3: "true",
            delegatePattern: "true",
            openApiNullable: "false",
    ]
    importMappings = [
            'Pageable': 'org.springframework.data.domain.Pageable',
    ]
}
compileJava.dependsOn(tasks.openApiGenerate)